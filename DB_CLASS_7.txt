# DUAL COMMAND - IS A DUMMY TABLE PRESENT IN SQL USED TO DO SOME OPERATIONS#

	SELECT LOWER('SQL EMPLOYEE') FROM EMPLOYEE;
	SELECT 3+4 FROM DUAL;
	SELECT INITCAP('SQL EMPLOYEE') FROM EMPLOYEE;
	

SELECT *  FROM DEPARTMENT WHERE LOWER(DNAME)='finance'; #FUNCTION LOWER CONVERTS DNAME TO LOWER CASE AND THEN CHECKS FOR THE VALUE.
 
SELECT *  FROM DEPARTMENT WHERE UPPER(DNAME)='FINANCE'; #FUNCTION UPPER CONVERTS DNAME TO UPPER CASE AND THEN CHECKS FOR THE VALUE.
 
SELECT SUBSTR(LNAME,1,3) FROM EMPLOYEE; #SUBSTRING FROM STRING POSITION 1 TO 3 IS DISPLAYED
  
SELECT LENGTH(LNAME) FROM EMPLOYEE; #LENGTH ALL ROWS OF LNAME IS DISPLAYED
  
SELECT SUBSTR('SQL EMPLOYEE',5,4) FROM DUAL; # HERE, THR OUTPUT IS 4 STRINGS FROM 5TH STRING.('SQL EMPLOYEE',5,4) 5 ->  POSITION, 4 -> CHARACTERS FROM 5TH POSITION

SELECT INSTR('SQL EMPLOYEE','P') FROM DUAL; #FIRST OCCURANCE OF CHARACTER 'P' IS 7. SO 7 IS THE OUTPUT
 INSTR('SQLEMPLOYEE','P')
------------------------
                       7
		
SQL> SELECT LPAD('SQL EMPLOYEE',20,'*') FROM DUAL;
LPAD('SQLEMPLOYEE',2
--------------------
********SQL EMPLOYEE


SELECT CONCAT(FNAME,SALARY),LENGTH(FNAME),INSTR(FNAME,'A'),SUBSTR(FNAME,2,5),LPAD(SALARY,10,'*') FROM EMPLOYEE; # ALL FUNCTIONS IN A SINLE QUERY

SQL> SELECT ROUND(34.45345345) FROM DUAL;

ROUND(34.45345345)
------------------
                34

SQL> SELECT TRUNC(34.45345345,5) FROM DUAL;

TRUNC(34.45345345,5)
--------------------
            34.45345

SQL> SELECT MOD(1600,300) FROM DUAL;

MOD(1600,300)
-------------
          100
		 
SQL> SELECT ROUND(34.45345345,2) FROM DUAL;

ROUND(34.45345345,2)
--------------------
               34.45

SQL> SELECT ROUND(34.45745345,2) FROM DUAL;

ROUND(34.45745345,2)
--------------------
               34.46

SQL> SELECT TRUNC(34.45745345,2) FROM DUAL;

TRUNC(34.45745345,2)
--------------------
               34.45
			   
#TRUNC DOESN'T LOOK INTO CEILING AND FLOORING WHEREAS ROUND DOES

#FINDING NUMBER OF MONTHS#

SQL> SELECT ((SYSDATE-DOB)/365)*12 FROM EMPLOYEE;

((SYSDATE-DOB)/365)*12
----------------------
            299.129841
            639.173677
            532.521622
            272.499704
            298.
			
SQL> SELECT DOB,ADD_MONTHS(DOB,4) FROM EMPLOYEE;

DOB       ADD_MONTH
--------- ---------
12-SEP-92 12-JAN-93
19-MAY-64 19-SEP-64
06-APR-73 06-AUG-73
01-DEC-94 01-APR-95
17-SEP-92 17-JAN-93

SQL> SELECT MONTHS_BETWEEN(SYSDATE,DOB) FROM EMPLOYEE;

MONTHS_BETWEEN(SYSDATE,DOB)
---------------------------
                 298.952716
                 638.726909
                 532.146264
                 272.307555
                 298.791425

SQL> SELECT LAST_DAY(SYSDATE) FROM DUAL;

LAST_DAY(
---------
31-AUG-17

#DATE TO CHAR

SQL> SELECT TO_CHAR(SYSDATE,'DD-MM-YY') FROM DUAL;

TO_CHAR(
--------
10-08-17

SQL> SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY') FROM DUAL;

TO_CHAR(SY
----------
10-08-2017

SQL> SELECT TO_CHAR(SYSDATE,'DAY-MONTH-YEAR') FROM DUAL;

TO_CHAR(SYSDATE,'DAY-MONTH-YEAR')
--------------------------------------------------------------------------------
THURSDAY -AUGUST   -TWENTY SEVENTEEN

SQL> SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') FROM DUAL;

TO_CHAR(SY
----------
10/08/2017	

SQL> SELECT TO_CHAR(SYSDATE,'DY-MONTH-YEAR') FROM DUAL;

TO_CHAR(SYSDATE,'DY-MONTH-YEAR')
--------------------------------------------------------------------------------
THU-AUGUST   -TWENTY SEVENTEEN



SQL> SELECT FNAME,SALARY,NVL(COMM,0) COMM_EVAL FROM EMPLOYEE;

FNAME                    SALARY  COMM_EVAL
-------------------- ---------- ----------
ramya                     45300          0
ranganathan               87300          0
roopa                     66300          0
abhiram                   97300          0
padmni                    78300          0

#DECODE IS A FUNCTION THAT WORKS LIKE IF-THEN-ELSE STATEMENT#

SQL> SELECT DNO,SALARY,DECODE(DNO,'D3', SALARY*1.5,
  2     'D2',SALARY*1.15)
  3    REV_SALARY
  4    FROM EMPLOYEE;

DNO      SALARY REV_SALARY
---- ---------- ----------
d1        45300
d3        87300
d1        66300
d2        97300
d3        78300


SQL>  SELECT DNO,SALARY,DECODE(DNO,'d3', SALARY*1.5,
  2  'd2',SALARY*1.15,
  3  SALARY*1.2)
  4  REV_SAL
  5  FROM EMPLOYEE;

DNO      SALARY    REV_SAL
---- ---------- ----------
d1        45300      54360
d3        87300     104760
d1        66300      79560
d2        97300     116760
d3        78300      93960

#UNION COMPATIBLE - THE DEGREE(NO OF COLUMNS) OF RELATION PARTICIPATING IN A SET OPERATIONS LIKE(UNION,INTERSECTION) SHALL BE THE SAME
AND THE DOMAIN(DATATYPE) OF CORRESPONDING ATTRIBUTE SHALL BE THE SAME#




